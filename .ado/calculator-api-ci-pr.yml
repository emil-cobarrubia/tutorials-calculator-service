resources:
  repositories:
    - repository: self
      trigger: none

variables:
  runRestoreAndBuild: false  # Default to true, can be overridden

stages:
- stage: Build
  displayName: Build .Net Core Solution
  jobs:
  - job: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - ${{ if eq(variables['runRestoreAndBuild'], 'true') }}:
      - task: DotNetCoreCLI@2
        displayName: Restore
        inputs:
          command: 'restore'
          projects: '**/*.sln'
          feedsToUse: 'select'

      - task: DotNetCoreCLI@2
        displayName: Build
        inputs:
          command: 'build'
          projects: '**/*.sln'
    
    - script: |
        dotnet tool install --global dotnet-reportgenerator-globaltool
      displayName: 'Install ReportGenerator'
    
    - task: DotNetCoreCLI@2
      displayName: Run Unit Tests and Collect Coverage
      inputs:
        command: 'test'
        projects: '**/*Tests.csproj'
        arguments: '--configuration $(BuildConfiguration) --collect:"XPlat Code Coverage" /p:CoverletOutputFormat=cobertura /p:CoverletOutput=$(Agent.TempDirectory)/**/coverage.cobertura.xml' 
    
    - script: |
        ls $(Agent.TempDirectory)
        ls $(Agent.TempDirectory)/**/
      displayName: 'Debug'
    
    - script: |
        reportgenerator "-reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml" "-reports:$(Agent.TempDirectory)/**/" "-reporttypes:Html"
      displayName: 'Generate code coverage report'

    - script: |
        ls $(Agent.TempDirectory)
        ls $(Agent.TempDirectory)/**/
        ls $(Build.SourcesDirectory)/
      displayName: 'Debug'

    - task: PublishCodeCoverageResults@1
      displayName: 'Publish code coverage results'
      inputs:
        codeCoverageTool: 'Cobertura'
        summaryFileLocation: '$(Agent.TempDirectory)/**/coverage.cobertura.xml'
        reportDirectory: '$(Agent.TempDirectory)/**/'
        failIfCoverageEmpty: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish code coverage report'
      inputs:
        PathtoPublish: '$(Agent.TempDirectory)/**/'
        ArtifactName: 'CodeCoverage'
        publishLocation: 'Container'
